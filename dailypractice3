import boto3
import requests
import json
import pandas as pd

url = "https://okpricemart.grocerypundit.com/api/AogGetOrderDetailsToPOSFormat"


def lambda_handler(event):
    body = {
        "rsa_client_id": "181",
        "clientStoreId": "1",
        "member_number": "44674934368",
        "ecomOrderId": "24389"
    }

    s3 = boto3.client('s3',
                      aws_access_key_id="AKIATABGVN5PEF4BS5PR",
                      aws_secret_access_key="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")

    # Getting data from url.
    response = requests.post(url, json=body)
    rules = response.json()
    data = rules['data']

    data1 = []

    # Adding HDR data.
    data1.append({
        "Transaction Date": "2023-02-02",
        "Transaction Time": "05:24:21",
        "Transaction ID": data["order_id"],
        "Record Type": "HDR",
        "Version": "",
        "Organization": "",
        "Loyality": int(data["member_number"]),
        "Tax ID": "",
        "Tax ID State Code": "",
        "Transaction Status": "",
        "": ""
    })
    # Adding UPC data.
    for i in data['order_items']:
        data1.append({
            "Transaction Date": "2023-02-02",
            "Transaction Time": "05:24:21",
            "Transaction ID": data["order_id"],
            "Record Type": "UPC",
            "Product Code": int(i['sku']),
            "Retail Type": "L",
            "Multiple": i['price'],
            "Price": i['price'],
            "Quantity": i['qty'],
            "Weight": i['weight'],
            "": ""
        }
        )
    # print(data1)

    # Adding CPN data.
    # for i in data['getCouponList']:
    #     data1.append({
    #         "Transaction Date": "2023-02-02",
    #         "Transaction Time": "05:24:21",
    #         "Transaction ID": data["order_id"],
    #         "Record Type": "CPN",
    #         "Coupon Type": "",
    #         "Coupon code": "",
    #         "Amount": "",
    #         "Dept Code": "",
    #         "": "",
    #         "": "",
    #         "": ""
    #     }
    #     )
    # Adding TND data.
    data1.append({
        "Transaction Date": "2023-02-02",
        "Transaction Time": "05:24:21",
        "Transaction ID": data["order_id"],
        "Record Type": "TND",
        "Media Code": data["payment_method_name"],
        "Account Number": "",
        "Tendered Amount": data["transaction_tax_amount"],
        "": "",
        "": "",
        "": "",
        "": ""

    })
    # Adding TAX data.
    data1.append({
        "Transaction Date": "2023-02-02",
        "Transaction Time": "05:24:21",
        "Transaction ID": data["order_id"],
        "Record Type": "TAX",
        "Tax Code": "",
        "Tax Collected": data["transaction_tax_amount"],

    }
    )
    count = len(data1)
    # Adding FTR data.
    data1.append({
        "Transaction Date": "2023-02-02",
        "Transaction Time": "05:24:21",
        "Transaction ID": data["order_id"],
        "Record Type": "FTR",
        "Detail Count": count-1,
        "Field3": "",
        "Tax Total": data["transaction_tax_amount"],
        "Transaction Total": data["transaction_total_amount"],
    }
    )
    json_data = json.dumps(data1)

    df = pd.read_json(json_data)
    df.columns = df.columns.str.replace(',', '|')

    # Converting Float to int even with Nan values in column.
    df['Product Code'] = df['Product Code'].astype("Int64")
    df['Loyality'] = df["Loyality"].astype("Int64")
    df['Detail Count'] = df['Detail Count'].astype("Int64")

    # converting dataframe to csv file.
    df = df.to_csv(sep='|', index=False)
    file_name = df.encode('utf-8')

    # Adding file into S3 Bucket
    response = s3.put_object(
        Body=file_name,
        Bucket="beginning.00",
        Key="ftp_file.csv")

    if response:
        print("file uploaded")
    else:
        print("file is not uploaded")


lambda_handler(event=url)
